
<%= simple_nested_form_for @zone, html: { class: 'form-horizontal' },

    wrapper: :horizontal_form,
    wrapper_mappings: {
      check_boxes: :horizontal_radio_and_checkboxes,
      radio_buttons: :horizontal_radio_and_checkboxes,
      file: :horizontal_file_input,
      boolean: :horizontal_boolean
    } do |f| %>

  <%= f.error_notification %>

  <%= f.input :name, :placeholder => 'Name' %>

    <%= f.fields_for :polygons do |builder| %>
        <%= render "polygon_fields", :f => builder %>
        <%= builder.link_to_remove "Remove" %>
    <% end %>
    <%= f.link_to_add "Add a segment", :polygons %>


  <div class="actions">
    <%= f.submit %>
  </div>

<% end %>







<br>

<div id="control">
  <button id="start">START</button>
  <button id="stop">STOP</button>
  <button id="save">SAVE</button>
</div>

<div id="map">

</div>

<style>
  #map {
    width: 100%;
    height: 1000px;
  }
</style>


<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBLrXVDgIBkFlSsRYbzyxKDce9pRIEaekY&callback=initMap" >
</script>

<script>
  var started = false;
  var polyline;
  var points = [];

  function initMap() {
    var myLatLng = {lat: 60.644, lng: 17.000};
    /* CREATE A MAP! */
    var mapDiv = document.getElementById('map');
    var map = new google.maps.Map(mapDiv, {
      center: myLatLng,
      mapTypeId: google.maps.MapTypeId.SATELLITE,
      zoom: 15
    });

    map.addListener('click', function(event) {
      if (started) {
        var path = polyline.getPath();
        path.push(event.latLng);

        points.push(event.latLng);
      }
    });

    $("#start").click(function() {
      started = true;

      polyline = new google.maps.Polyline({
        strokeColor: '#000000',
        strokeOpacity: 1.0,
        strokeWeight: 3
      });
      polyline.setMap(map);
    });

    $("#stop").click(function() {
      started = false;

      // Construct the polygon.
      var z = new google.maps.Polygon({
        paths: points,
        strokeColor: '#000000',
        strokeOpacity: 0.8,
        strokeWeight: 2,
        fillColor: '#FF0000',
        fillOpacity: 0.25,
        editable: true
      });

      polyline.setMap(null);
      z.setMap(map);

      points = [];
    });

    $("#save").click(function() {
      // save the ZONE
      alert(JSON.stringify(polyline.getPath().getArray()));

      $.post( "/zones", {
        polygons: {zone_id: gon.zone.id, lat_start: ll.lat, lng_start: ll.lng, lat_end: 0.0, lng_end: 0.0 }} );
    });

  }
</script>
